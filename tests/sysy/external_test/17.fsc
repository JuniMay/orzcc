// polybench-c-4.2 linear-algebra/blas/trmm
#include <stdio.h>
const int M = 1000;
const int N = 1200;

float A[M][M] = {};
float B[M][N] = {};
float alpha;

void init() {
    alpha = 1.5;

    int i = 0;
    int j = 0;

    while (i < M) {
        j = 0;
        while (j < i) {
            A[i][j] = (i + j) % M / M;
            j = j + 1;
        }
        A[i][i] = 1.0;

        j = 0;
        while (j < N) {
            B[i][j] = (N + (i - j)) % N / N;
            j = j + 1;
        }
        i = i + 1;
    }
}

void kernel_trmm() {
    int i = 0;
    int j = 0;
    int k = 0;

    while (i < M) {
        j = 0;
        while (j < N) {
            k = i + 1;
            while (k < M) {
                B[i][j] = B[i][j] + A[k][i] * B[k][j];
                k = k + 1;
            }
            B[i][j] = alpha * B[i][j];
            j = j + 1;
        }
        i = i + 1;
    }
}

int main() {
    init();
    kernel_trmm();
    printf("%a", B[0][0] * 2 + 1);
    return 0;
}
