// float global constants
const float RADIUS = 5.5, EPS = 1e-6;

// hexadecimal float constant
const float PI_HEX = 0x1.921fb6p+1;

// float constant evaluation
const float EVAL2 = 2 * PI_HEX * RADIUS;

// float -> float function
float float_abs(float x) {
  if (x < 0) return -x;
  return x;
}

// float -> float -> int function & float/int expression
int float_eq(float a, float b) {

  putfloat(a);
  putch(10);

  putfloat(b);
  putch(10);

  putfloat(a - b);
  putch(10);

  putfloat(float_abs(a - b));
  putch(10);

  if (float_abs(a - b) < EPS) {
    return 1 * 2. / 2;
  } else {
    return 0;
  }
}

void error() {
  putch(101);
  putch(114);
  putch(114);
  putch(111);
  putch(114);
  putch(10);
}

void ok() {
  putch(111);
  putch(107);
  putch(10);
}

void assert(int cond) {
  if (!cond) {
    error();
  } else {
    ok();
  }
}

int main() {
  assert(float_eq(EVAL2, EVAL2));
  return 0;
}
